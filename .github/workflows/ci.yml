name: CI/CD Pipeline

on:
  push:
    branches: [feature-0001]
  pull_request:
    branches: [feature-0001]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run lint
      - run: echo "Skip test step for now"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run build
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build and push Docker image
        run: |
          docker build -t faelsouz/dra-ana-paula:v2.0.0 .
          docker push faelsouz/dra-ana-paula:v2.0.0

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

#      - name: Aplicar manifests do Kubernetes
#        run: kubectl apply -f k8s/

      - name: Ver pods (debug)
        run: kubectl get pods -A

      - name: Port-forward para localhost:8080
        run: |
          kubectl port-forward svc/estetica-app-service 8080:80 -n est-app &
          sleep 5
  
      - name: Esperar app responder
        run: |
          APP_URL="http://localhost:8080"
          echo "Esperando a aplicação ficar disponível em $APP_URL..."
          for i in {1..10}; do
            if curl -s $APP_URL > /dev/null; then
              echo "Aplicação está online!"
              exit 0
            else
              echo "Tentando novamente..."
              sleep 5
            fi
          done
          echo "Aplicação não respondeu!"
          exit 1      

