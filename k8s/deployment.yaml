apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: est-app 
  name: estetica-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: estetica-app
  template:
    metadata:
      labels:
        app: estetica-app
    spec:
      containers:
        - name: estetica-app
          image: faelsouz/dra-ana-paula:v1
          ports:
            - containerPort: 80
          env:
            - name: REACT_APP_API_URL  # Se for React, use REACT_APP_
              value: "http://estetica-app-service:3001/api/booking"
            - name: DATABASE_HOST
              value: "postgresql"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DATABASE_PASSWORD
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DATABASE_NAME        
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: app-storage
              mountPath: /app/data
      volumes:
        - name: app-storage
          persistentVolumeClaim:
            claimName: app-pvc  # Nome do PVC a ser usado

#        - name: nginx-prometheus-exporter
#          image: nginx/nginx-prometheus-exporter:0.10.0
#          args:
#            - "-nginx.scrape-uri=http://localhost:80/nginx_status"
#          ports:
#            - containerPort: 9113
#          volumeMounts:
#            - name: nginx-config
#              mountPath: /etc/nginx/nginx.conf
#              subPath: nginx.conf
#      volumes:
#        - name: nginx-config
#          configMap:
#            name: nginx-config
